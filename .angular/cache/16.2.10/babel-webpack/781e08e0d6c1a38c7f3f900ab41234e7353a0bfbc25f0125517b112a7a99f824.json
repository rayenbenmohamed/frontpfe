{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/module.service\";\nimport * as i2 from \"@angular/common\";\nfunction ModulesComponent_div_3_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 4)(2, \"div\", 5)(3, \"h5\", 6);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"p\", 7);\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const module_r4 = ctx.$implicit;\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(module_r4.nomModule);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(module_r4.description);\n  }\n}\nfunction ModulesComponent_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, ModulesComponent_div_3_div_1_Template, 7, 2, \"div\", 3);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.modules);\n  }\n}\nfunction ModulesComponent_ng_template_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵtext(1, \"Aucun module disponible pour le moment.\");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class ModulesComponent {\n  constructor(moduleService) {\n    this.moduleService = moduleService;\n    this.modules = []; // Déclarez la propriété modules et initialisez-la avec un tableau vide\n  }\n\n  ngOnInit() {\n    this.fetchModules(); // Appeler la méthode pour récupérer les modules lors de l'initialisation du composant\n  }\n\n  fetchModules() {\n    this.moduleService.getModules().subscribe(modules => {\n      this.modules = modules; // Affecter les modules récupérés au tableau modules\n    }, error => {\n      console.error('Erreur lors de la récupération des modules :', error);\n    });\n  }\n  static #_ = this.ɵfac = function ModulesComponent_Factory(t) {\n    return new (t || ModulesComponent)(i0.ɵɵdirectiveInject(i1.ModuleService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ModulesComponent,\n    selectors: [[\"app-modules\"]],\n    decls: 6,\n    vars: 2,\n    consts: [[1, \"container\"], [4, \"ngIf\", \"ngIfElse\"], [\"noModules\", \"\"], [4, \"ngFor\", \"ngForOf\"], [1, \"card\", \"mb-3\"], [1, \"card-body\"], [1, \"card-title\"], [1, \"card-text\"]],\n    template: function ModulesComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"h1\");\n        i0.ɵɵtext(2, \"Liste des modules\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(3, ModulesComponent_div_3_Template, 2, 1, \"div\", 1);\n        i0.ɵɵtemplate(4, ModulesComponent_ng_template_4_Template, 2, 0, \"ng-template\", null, 2, i0.ɵɵtemplateRefExtractor);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        const _r1 = i0.ɵɵreference(5);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", ctx.modules.length > 0)(\"ngIfElse\", _r1);\n      }\n    },\n    dependencies: [i2.NgForOf, i2.NgIf],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","module_r4","nomModule","description","ɵɵtemplate","ModulesComponent_div_3_div_1_Template","ɵɵproperty","ctx_r0","modules","ModulesComponent","constructor","moduleService","ngOnInit","fetchModules","getModules","subscribe","error","console","_","ɵɵdirectiveInject","i1","ModuleService","_2","selectors","decls","vars","consts","template","ModulesComponent_Template","rf","ctx","ModulesComponent_div_3_Template","ModulesComponent_ng_template_4_Template","ɵɵtemplateRefExtractor","length","_r1"],"sources":["C:\\Users\\ASUS\\Downloads\\Formini-main (2)\\Formini-main\\formini\\src\\app\\modules\\modules.component.ts","C:\\Users\\ASUS\\Downloads\\Formini-main (2)\\Formini-main\\formini\\src\\app\\modules\\modules.component.html"],"sourcesContent":["// modules.component.ts\n\nimport { Component, OnInit } from '@angular/core';\nimport { Module } from '../model/module'; // Assurez-vous d'importer correctement votre modèle de module\nimport { ModuleService } from '../services/module.service';\n\n@Component({\n  selector: 'app-modules',\n  templateUrl: './modules.component.html',\n  styleUrls: ['./modules.component.css']\n})\nexport class ModulesComponent implements OnInit {\n  modules: Module[] = []; // Déclarez la propriété modules et initialisez-la avec un tableau vide\n\n  constructor(private moduleService: ModuleService) { }\n\n  ngOnInit(): void {\n    this.fetchModules(); // Appeler la méthode pour récupérer les modules lors de l'initialisation du composant\n  }\n\n  fetchModules(): void {\n    this.moduleService.getModules().subscribe(\n      modules => {\n        this.modules = modules; // Affecter les modules récupérés au tableau modules\n      },\n      error => {\n        console.error('Erreur lors de la récupération des modules :', error);\n      }\n    );\n  }\n}\n","<!-- module.component.html -->\n\n<div class=\"container\">\n    <h1>Liste des modules</h1>\n    <div *ngIf=\"modules.length > 0; else noModules\">\n      <div *ngFor=\"let module of modules\">\n        <div class=\"card mb-3\">\n          <div class=\"card-body\">\n            <h5 class=\"card-title\">{{ module.nomModule }}</h5>\n            <p class=\"card-text\">{{ module.description }}</p>\n            <!-- Ajoutez d'autres détails du module ici -->\n          </div>\n        </div>\n      </div>\n    </div>\n    <ng-template #noModules>\n      <p>Aucun module disponible pour le moment.</p>\n    </ng-template>\n  </div>\n  "],"mappings":";;;;;ICKMA,EAAA,CAAAC,cAAA,UAAoC;IAGPD,EAAA,CAAAE,MAAA,GAAsB;IAAAF,EAAA,CAAAG,YAAA,EAAK;IAClDH,EAAA,CAAAC,cAAA,WAAqB;IAAAD,EAAA,CAAAE,MAAA,GAAwB;IAAAF,EAAA,CAAAG,YAAA,EAAI;;;;IAD1BH,EAAA,CAAAI,SAAA,GAAsB;IAAtBJ,EAAA,CAAAK,iBAAA,CAAAC,SAAA,CAAAC,SAAA,CAAsB;IACxBP,EAAA,CAAAI,SAAA,GAAwB;IAAxBJ,EAAA,CAAAK,iBAAA,CAAAC,SAAA,CAAAE,WAAA,CAAwB;;;;;IALrDR,EAAA,CAAAC,cAAA,UAAgD;IAC9CD,EAAA,CAAAS,UAAA,IAAAC,qCAAA,iBAQM;IACRV,EAAA,CAAAG,YAAA,EAAM;;;;IAToBH,EAAA,CAAAI,SAAA,GAAU;IAAVJ,EAAA,CAAAW,UAAA,YAAAC,MAAA,CAAAC,OAAA,CAAU;;;;;IAWlCb,EAAA,CAAAC,cAAA,QAAG;IAAAD,EAAA,CAAAE,MAAA,8CAAuC;IAAAF,EAAA,CAAAG,YAAA,EAAI;;;ADLpD,OAAM,MAAOW,gBAAgB;EAG3BC,YAAoBC,aAA4B;IAA5B,KAAAA,aAAa,GAAbA,aAAa;IAFjC,KAAAH,OAAO,GAAa,EAAE,CAAC,CAAC;EAE4B;;EAEpDI,QAAQA,CAAA;IACN,IAAI,CAACC,YAAY,EAAE,CAAC,CAAC;EACvB;;EAEAA,YAAYA,CAAA;IACV,IAAI,CAACF,aAAa,CAACG,UAAU,EAAE,CAACC,SAAS,CACvCP,OAAO,IAAG;MACR,IAAI,CAACA,OAAO,GAAGA,OAAO,CAAC,CAAC;IAC1B,CAAC,EACDQ,KAAK,IAAG;MACNC,OAAO,CAACD,KAAK,CAAC,8CAA8C,EAAEA,KAAK,CAAC;IACtE,CAAC,CACF;EACH;EAAC,QAAAE,CAAA,G;qBAlBUT,gBAAgB,EAAAd,EAAA,CAAAwB,iBAAA,CAAAC,EAAA,CAAAC,aAAA;EAAA;EAAA,QAAAC,EAAA,G;UAAhBb,gBAAgB;IAAAc,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,0BAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCT7BlC,EAAA,CAAAC,cAAA,aAAuB;QACfD,EAAA,CAAAE,MAAA,wBAAiB;QAAAF,EAAA,CAAAG,YAAA,EAAK;QAC1BH,EAAA,CAAAS,UAAA,IAAA2B,+BAAA,iBAUM;QACNpC,EAAA,CAAAS,UAAA,IAAA4B,uCAAA,gCAAArC,EAAA,CAAAsC,sBAAA,CAEc;QAChBtC,EAAA,CAAAG,YAAA,EAAM;;;;QAdEH,EAAA,CAAAI,SAAA,GAA0B;QAA1BJ,EAAA,CAAAW,UAAA,SAAAwB,GAAA,CAAAtB,OAAA,CAAA0B,MAAA,KAA0B,aAAAC,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}