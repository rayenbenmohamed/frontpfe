{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ModuleService {\n  constructor(http) {\n    this.http = http;\n    this.baseUrl = 'http://localhost:3001/api'; // Mettez l'URL de votre API Node.js\n  }\n\n  getAllModules() {\n    return this.http.get(`${this.baseUrl}/modules`);\n  }\n  getModuleById(id) {\n    return this.http.get(`${this.baseUrl}/modules/${id}`);\n  }\n  createModule(moduleData) {\n    return this.http.post(`${this.baseUrl}/modules`, moduleData);\n  }\n  updateModule(id, moduleData) {\n    return this.http.put(`${this.baseUrl}/modules/${id}`, moduleData);\n  }\n  deleteModule(id) {\n    return this.http.delete(`${this.baseUrl}/modules/${id}`);\n  }\n  static #_ = this.ɵfac = function ModuleService_Factory(t) {\n    return new (t || ModuleService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ModuleService,\n    factory: ModuleService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["ModuleService","constructor","http","baseUrl","getAllModules","get","getModuleById","id","createModule","moduleData","post","updateModule","put","deleteModule","delete","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\ASUS\\Downloads\\Formini-main (2)\\Formini-main\\formini\\src\\app\\services\\module.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ModuleService {\n\n  private baseUrl = 'http://localhost:3001/api'; // Mettez l'URL de votre API Node.js\n\n  constructor(private http: HttpClient) { }\n\n  getAllModules(): Observable<any[]> {\n    return this.http.get<any[]>(`${this.baseUrl}/modules`);\n  }\n\n  getModuleById(id: string): Observable<any> {\n    return this.http.get<any>(`${this.baseUrl}/modules/${id}`);\n  }\n\n  createModule(moduleData: any): Observable<any> {\n    return this.http.post<any>(`${this.baseUrl}/modules`, moduleData);\n  }\n\n  updateModule(id: string, moduleData: any): Observable<any> {\n    return this.http.put<any>(`${this.baseUrl}/modules/${id}`, moduleData);\n  }\n\n  deleteModule(id: string): Observable<any> {\n    return this.http.delete<any>(`${this.baseUrl}/modules/${id}`);\n  }\n  \n  // Ajoutez d'autres méthodes selon vos besoins\n}\n"],"mappings":";;AAOA,OAAM,MAAOA,aAAa;EAIxBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,OAAO,GAAG,2BAA2B,CAAC,CAAC;EAEP;;EAExCC,aAAaA,CAAA;IACX,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAQ,GAAG,IAAI,CAACF,OAAO,UAAU,CAAC;EACxD;EAEAG,aAAaA,CAACC,EAAU;IACtB,OAAO,IAAI,CAACL,IAAI,CAACG,GAAG,CAAM,GAAG,IAAI,CAACF,OAAO,YAAYI,EAAE,EAAE,CAAC;EAC5D;EAEAC,YAAYA,CAACC,UAAe;IAC1B,OAAO,IAAI,CAACP,IAAI,CAACQ,IAAI,CAAM,GAAG,IAAI,CAACP,OAAO,UAAU,EAAEM,UAAU,CAAC;EACnE;EAEAE,YAAYA,CAACJ,EAAU,EAAEE,UAAe;IACtC,OAAO,IAAI,CAACP,IAAI,CAACU,GAAG,CAAM,GAAG,IAAI,CAACT,OAAO,YAAYI,EAAE,EAAE,EAAEE,UAAU,CAAC;EACxE;EAEAI,YAAYA,CAACN,EAAU;IACrB,OAAO,IAAI,CAACL,IAAI,CAACY,MAAM,CAAM,GAAG,IAAI,CAACX,OAAO,YAAYI,EAAE,EAAE,CAAC;EAC/D;EAAC,QAAAQ,CAAA,G;qBAxBUf,aAAa,EAAAgB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAbpB,aAAa;IAAAqB,OAAA,EAAbrB,aAAa,CAAAsB,IAAA;IAAAC,UAAA,EAFZ;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}