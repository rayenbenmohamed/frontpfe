{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class AuthInterceptor {\n  intercept(request, next) {\n    const token = localStorage.getItem('token');\n    if (token) {\n      const cloned = request.clone({\n        headers: request.headers.set('Authorization', `Bearer ${token}`)\n      });\n      return next.handle(cloned);\n    } else {\n      return next.handle(request);\n    }\n  }\n  static #_ = this.ɵfac = function AuthInterceptor_Factory(t) {\n    return new (t || AuthInterceptor)();\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthInterceptor,\n    factory: AuthInterceptor.ɵfac\n  });\n}","map":{"version":3,"names":["AuthInterceptor","intercept","request","next","token","localStorage","getItem","cloned","clone","headers","set","handle","_","_2","factory","ɵfac"],"sources":["C:\\Users\\ASUS\\Desktop\\Nouveau dossier (2)\\frontpfe\\src\\app\\auth.interceptor.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport {\r\n  HttpRequest,\r\n  HttpHandler,\r\n  HttpEvent,\r\n  HttpInterceptor\r\n} from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class AuthInterceptor implements HttpInterceptor {\r\n\r\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      const cloned = request.clone({\r\n        headers: request.headers.set('Authorization', `Bearer ${token}`)\r\n      });\r\n\r\n      return next.handle(cloned);\r\n    } else {\r\n      return next.handle(request);\r\n    }\r\n  }\r\n}\r\n"],"mappings":";AAUA,OAAM,MAAOA,eAAe;EAE1BC,SAASA,CAACC,OAAyB,EAAEC,IAAiB;IACpD,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,IAAIF,KAAK,EAAE;MACT,MAAMG,MAAM,GAAGL,OAAO,CAACM,KAAK,CAAC;QAC3BC,OAAO,EAAEP,OAAO,CAACO,OAAO,CAACC,GAAG,CAAC,eAAe,EAAE,UAAUN,KAAK,EAAE;OAChE,CAAC;MAEF,OAAOD,IAAI,CAACQ,MAAM,CAACJ,MAAM,CAAC;KAC3B,MAAM;MACL,OAAOJ,IAAI,CAACQ,MAAM,CAACT,OAAO,CAAC;;EAE/B;EAAC,QAAAU,CAAA,G;qBAbUZ,eAAe;EAAA;EAAA,QAAAa,EAAA,G;WAAfb,eAAe;IAAAc,OAAA,EAAfd,eAAe,CAAAe;EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}