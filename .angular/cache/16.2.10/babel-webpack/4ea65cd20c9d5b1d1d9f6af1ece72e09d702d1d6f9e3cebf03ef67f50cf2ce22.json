{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../auth.service\";\nimport * as i2 from \"@angular/common\";\nfunction CompteComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"h2\");\n    i0.ɵɵtext(2, \"Informations sur le compte\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"p\")(4, \"strong\");\n    i0.ɵɵtext(5, \"Nom d'utilisateur:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"p\")(8, \"strong\");\n    i0.ɵɵtext(9, \"R\\u00F4le:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"p\")(12, \"strong\");\n    i0.ɵɵtext(13, \"Est actif:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(14);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(6);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.compteInfo.nomUtilisateur, \"\");\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.compteInfo.role, \"\");\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.compteInfo.estActive ? \"Oui\" : \"Non\", \"\");\n  }\n}\nexport class CompteComponent {\n  constructor(authService) {\n    this.authService = authService;\n    this.compte = null;\n    this.modules = []; // Ajouter une propriété pour stocker les modules\n  }\n\n  ngOnInit() {\n    this.loadCompteInfo();\n    this.loadModules(); // Charger les modules lors de l'initialisation du composant\n  }\n\n  loadCompteInfo() {\n    this.compte = this.authService.getCompteInfo();\n  }\n  loadModules() {\n    this.modules = this.authService.getModules(); // Récupérer les modules depuis le service\n  }\n  static #_ = this.ɵfac = function CompteComponent_Factory(t) {\n    return new (t || CompteComponent)(i0.ɵɵdirectiveInject(i1.AuthService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CompteComponent,\n    selectors: [[\"app-compte\"]],\n    decls: 1,\n    vars: 1,\n    consts: [[4, \"ngIf\"]],\n    template: function CompteComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, CompteComponent_div_0_Template, 15, 3, \"div\", 0);\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", ctx.compteInfo);\n      }\n    },\n    dependencies: [i2.NgIf],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate1","ctx_r0","compteInfo","nomUtilisateur","role","estActive","CompteComponent","constructor","authService","compte","modules","ngOnInit","loadCompteInfo","loadModules","getCompteInfo","getModules","_","ɵɵdirectiveInject","i1","AuthService","_2","selectors","decls","vars","consts","template","CompteComponent_Template","rf","ctx","ɵɵtemplate","CompteComponent_div_0_Template","ɵɵproperty"],"sources":["C:\\Users\\ASUS\\Desktop\\Nouveau dossier (2)\\frontpfe\\src\\app\\compte\\compte.component.ts","C:\\Users\\ASUS\\Desktop\\Nouveau dossier (2)\\frontpfe\\src\\app\\compte\\compte.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from '../auth.service';\r\nimport { Compte } from '../model/compte';\r\nimport { Module } from '../model/module'; // Importer le modèle de module\r\n\r\n@Component({\r\n  selector: 'app-compte',\r\n  templateUrl: './compte.component.html',\r\n  styleUrls: ['./compte.component.css']\r\n})\r\nexport class CompteComponent implements OnInit {\r\n  compte: Compte | null = null;\r\n  modules: Module[] = []; // Ajouter une propriété pour stocker les modules\r\n\r\n  constructor(private authService: AuthService) {}\r\n\r\n  ngOnInit(): void {\r\n    this.loadCompteInfo();\r\n    this.loadModules(); // Charger les modules lors de l'initialisation du composant\r\n  }\r\n\r\n  loadCompteInfo(): void {\r\n    this.compte = this.authService.getCompteInfo();\r\n  }\r\n\r\n  loadModules(): void {\r\n    this.modules = this.authService.getModules(); // Récupérer les modules depuis le service\r\n  }\r\n}\r\n","<div *ngIf=\"compteInfo\">\r\n    <h2>Informations sur le compte</h2>\r\n    <p><strong>Nom d'utilisateur:</strong> {{ compteInfo.nomUtilisateur }}</p>\r\n    <p><strong>Rôle:</strong> {{ compteInfo.role }}</p>\r\n    <p><strong>Est actif:</strong> {{ compteInfo.estActive ? 'Oui' : 'Non' }}</p>\r\n  </div>\r\n  "],"mappings":";;;;;ICAAA,EAAA,CAAAC,cAAA,UAAwB;IAChBD,EAAA,CAAAE,MAAA,iCAA0B;IAAAF,EAAA,CAAAG,YAAA,EAAK;IACnCH,EAAA,CAAAC,cAAA,QAAG;IAAQD,EAAA,CAAAE,MAAA,yBAAkB;IAAAF,EAAA,CAAAG,YAAA,EAAS;IAACH,EAAA,CAAAE,MAAA,GAA+B;IAAAF,EAAA,CAAAG,YAAA,EAAI;IAC1EH,EAAA,CAAAC,cAAA,QAAG;IAAQD,EAAA,CAAAE,MAAA,iBAAK;IAAAF,EAAA,CAAAG,YAAA,EAAS;IAACH,EAAA,CAAAE,MAAA,IAAqB;IAAAF,EAAA,CAAAG,YAAA,EAAI;IACnDH,EAAA,CAAAC,cAAA,SAAG;IAAQD,EAAA,CAAAE,MAAA,kBAAU;IAAAF,EAAA,CAAAG,YAAA,EAAS;IAACH,EAAA,CAAAE,MAAA,IAA0C;IAAAF,EAAA,CAAAG,YAAA,EAAI;;;;IAFtCH,EAAA,CAAAI,SAAA,GAA+B;IAA/BJ,EAAA,CAAAK,kBAAA,MAAAC,MAAA,CAAAC,UAAA,CAAAC,cAAA,KAA+B;IAC5CR,EAAA,CAAAI,SAAA,GAAqB;IAArBJ,EAAA,CAAAK,kBAAA,MAAAC,MAAA,CAAAC,UAAA,CAAAE,IAAA,KAAqB;IAChBT,EAAA,CAAAI,SAAA,GAA0C;IAA1CJ,EAAA,CAAAK,kBAAA,MAAAC,MAAA,CAAAC,UAAA,CAAAG,SAAA,qBAA0C;;;ADM7E,OAAM,MAAOC,eAAe;EAI1BC,YAAoBC,WAAwB;IAAxB,KAAAA,WAAW,GAAXA,WAAW;IAH/B,KAAAC,MAAM,GAAkB,IAAI;IAC5B,KAAAC,OAAO,GAAa,EAAE,CAAC,CAAC;EAEuB;;EAE/CC,QAAQA,CAAA;IACN,IAAI,CAACC,cAAc,EAAE;IACrB,IAAI,CAACC,WAAW,EAAE,CAAC,CAAC;EACtB;;EAEAD,cAAcA,CAAA;IACZ,IAAI,CAACH,MAAM,GAAG,IAAI,CAACD,WAAW,CAACM,aAAa,EAAE;EAChD;EAEAD,WAAWA,CAAA;IACT,IAAI,CAACH,OAAO,GAAG,IAAI,CAACF,WAAW,CAACO,UAAU,EAAE,CAAC,CAAC;EAChD;EAAC,QAAAC,CAAA,G;qBAjBUV,eAAe,EAAAX,EAAA,CAAAsB,iBAAA,CAAAC,EAAA,CAAAC,WAAA;EAAA;EAAA,QAAAC,EAAA,G;UAAfd,eAAe;IAAAe,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,yBAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCV5BhC,EAAA,CAAAkC,UAAA,IAAAC,8BAAA,kBAKQ;;;QALFnC,EAAA,CAAAoC,UAAA,SAAAH,GAAA,CAAA1B,UAAA,CAAgB"},"metadata":{},"sourceType":"module","externalDependencies":[]}