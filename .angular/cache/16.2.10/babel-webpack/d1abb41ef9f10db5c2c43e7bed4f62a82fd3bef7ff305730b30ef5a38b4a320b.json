{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let CategoriesComponent = class CategoriesComponent {\n  constructor(categorieService) {\n    this.categorieService = categorieService;\n    this.categories = [];\n  }\n  ngOnInit() {\n    this.loadCategories();\n  }\n  loadCategories() {\n    this.categorieService.getAllCategories().subscribe(data => {\n      this.categories = data;\n    }, error => {\n      console.error('There was an error!', error);\n    });\n  }\n  addCategorie(formData) {\n    this.categorieService.createCategorie(formData).subscribe(() => {\n      console.log('Categorie added successfully');\n      this.loadCategories(); // Reload the list to show the new category\n    }, error => {\n      console.error('There was an error!', error);\n    });\n  }\n  updateCategorie(id, formData) {\n    this.categorieService.updateCategorie(id, formData).subscribe(() => {\n      console.log('Categorie updated successfully');\n      this.loadCategories(); // Reload the list to show the updated category\n    }, error => {\n      console.error('There was an error!', error);\n    });\n  }\n  deleteCategorie(id) {\n    this.categorieService.deleteCategorie(id).subscribe(() => {\n      console.log('Categorie deleted successfully');\n      this.loadCategories(); // Reload the list after deleting the category\n    }, error => {\n      console.error('There was an error!', error);\n    });\n  }\n};\nCategoriesComponent = __decorate([Component({\n  selector: 'app-categories',\n  templateUrl: './categories.component.html',\n  styleUrls: ['./categories.component.css']\n})], CategoriesComponent);","map":{"version":3,"names":["Component","CategoriesComponent","constructor","categorieService","categories","ngOnInit","loadCategories","getAllCategories","subscribe","data","error","console","addCategorie","formData","createCategorie","log","updateCategorie","id","deleteCategorie","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\ASUS\\Downloads\\Formini-main (2)\\Formini-main\\formini\\src\\app\\courses\\courses.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { CategorieService } from '../services/categorie.service';\n\n@Component({\n  selector: 'app-categories',\n  templateUrl: './categories.component.html',\n  styleUrls: ['./categories.component.css']\n})\nexport class CategoriesComponent implements OnInit {\n  categories: any[] = [];\n\n  constructor(private categorieService: CategorieService) { }\n\n  ngOnInit(): void {\n    this.loadCategories();\n  }\n\n  loadCategories(): void {\n    this.categorieService.getAllCategories().subscribe(\n      data => {\n        this.categories = data;\n      },\n      error => {\n        console.error('There was an error!', error);\n      }\n    );\n  }\n\n  addCategorie(formData: FormData): void {\n    this.categorieService.createCategorie(formData).subscribe(\n      () => {\n        console.log('Categorie added successfully');\n        this.loadCategories(); // Reload the list to show the new category\n      },\n      error => {\n        console.error('There was an error!', error);\n      }\n    );\n  }\n\n  updateCategorie(id: string, formData: FormData): void {\n    this.categorieService.updateCategorie(id, formData).subscribe(\n      () => {\n        console.log('Categorie updated successfully');\n        this.loadCategories(); // Reload the list to show the updated category\n      },\n      error => {\n        console.error('There was an error!', error);\n      }\n    );\n  }\n\n  deleteCategorie(id: string): void {\n    this.categorieService.deleteCategorie(id).subscribe(\n      () => {\n        console.log('Categorie deleted successfully');\n        this.loadCategories(); // Reload the list after deleting the category\n      },\n      error => {\n        console.error('There was an error!', error);\n      }\n    );\n  }\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AAQ1C,WAAMC,mBAAmB,GAAzB,MAAMA,mBAAmB;EAG9BC,YAAoBC,gBAAkC;IAAlC,KAAAA,gBAAgB,GAAhBA,gBAAgB;IAFpC,KAAAC,UAAU,GAAU,EAAE;EAEoC;EAE1DC,QAAQA,CAAA;IACN,IAAI,CAACC,cAAc,EAAE;EACvB;EAEAA,cAAcA,CAAA;IACZ,IAAI,CAACH,gBAAgB,CAACI,gBAAgB,EAAE,CAACC,SAAS,CAChDC,IAAI,IAAG;MACL,IAAI,CAACL,UAAU,GAAGK,IAAI;IACxB,CAAC,EACDC,KAAK,IAAG;MACNC,OAAO,CAACD,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;IAC7C,CAAC,CACF;EACH;EAEAE,YAAYA,CAACC,QAAkB;IAC7B,IAAI,CAACV,gBAAgB,CAACW,eAAe,CAACD,QAAQ,CAAC,CAACL,SAAS,CACvD,MAAK;MACHG,OAAO,CAACI,GAAG,CAAC,8BAA8B,CAAC;MAC3C,IAAI,CAACT,cAAc,EAAE,CAAC,CAAC;IACzB,CAAC,EACDI,KAAK,IAAG;MACNC,OAAO,CAACD,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;IAC7C,CAAC,CACF;EACH;EAEAM,eAAeA,CAACC,EAAU,EAAEJ,QAAkB;IAC5C,IAAI,CAACV,gBAAgB,CAACa,eAAe,CAACC,EAAE,EAAEJ,QAAQ,CAAC,CAACL,SAAS,CAC3D,MAAK;MACHG,OAAO,CAACI,GAAG,CAAC,gCAAgC,CAAC;MAC7C,IAAI,CAACT,cAAc,EAAE,CAAC,CAAC;IACzB,CAAC,EACDI,KAAK,IAAG;MACNC,OAAO,CAACD,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;IAC7C,CAAC,CACF;EACH;EAEAQ,eAAeA,CAACD,EAAU;IACxB,IAAI,CAACd,gBAAgB,CAACe,eAAe,CAACD,EAAE,CAAC,CAACT,SAAS,CACjD,MAAK;MACHG,OAAO,CAACI,GAAG,CAAC,gCAAgC,CAAC;MAC7C,IAAI,CAACT,cAAc,EAAE,CAAC,CAAC;IACzB,CAAC,EACDI,KAAK,IAAG;MACNC,OAAO,CAACD,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;IAC7C,CAAC,CACF;EACH;CACD;AAvDYT,mBAAmB,GAAAkB,UAAA,EAL/BnB,SAAS,CAAC;EACToB,QAAQ,EAAE,gBAAgB;EAC1BC,WAAW,EAAE,6BAA6B;EAC1CC,SAAS,EAAE,CAAC,4BAA4B;CACzC,CAAC,C,EACWrB,mBAAmB,CAuD/B"},"metadata":{},"sourceType":"module","externalDependencies":[]}