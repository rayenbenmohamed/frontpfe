{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class CategorieService {\n  constructor(http) {\n    this.http = http;\n    this.baseUrl = 'http://localhost:3001/api/categories'; // Ajustez selon l'URL de votre API\n  }\n  // Pour lister toutes les catégories\n  getAllCategories() {\n    return this.http.get(`${this.baseUrl}`);\n  }\n  // Pour obtenir les détails d'une seule catégorie par son ID\n  getCategorieById(id) {\n    return this.http.get(`${this.baseUrl}/${id}`);\n  }\n  // Pour créer une catégorie\n  createCategorie(categorieData) {\n    return this.http.post(`${this.baseUrl}/create`, categorieData);\n  }\n  // Pour mettre à jour une catégorie\n  updateCategorie(id, categorieData) {\n    return this.http.put(`${this.baseUrl}/update/${id}`, categorieData);\n  }\n  // Pour supprimer une catégorie\n  deleteCategorie(id) {\n    return this.http.delete(`${this.baseUrl}/delete/${id}`);\n  }\n  static #_ = this.ɵfac = function CategorieService_Factory(t) {\n    return new (t || CategorieService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: CategorieService,\n    factory: CategorieService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["CategorieService","constructor","http","baseUrl","getAllCategories","get","getCategorieById","id","createCategorie","categorieData","post","updateCategorie","put","deleteCategorie","delete","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\ASUS\\Desktop\\Nouveau dossier (2)\\frontpfe\\src\\app\\services\\categorie.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CategorieService {\r\n  private baseUrl = 'http://localhost:3001/api/categories'; // Ajustez selon l'URL de votre API\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  // Pour lister toutes les catégories\r\n  getAllCategories(): Observable<any> {\r\n    return this.http.get(`${this.baseUrl}`);\r\n  }\r\n\r\n  // Pour obtenir les détails d'une seule catégorie par son ID\r\n  getCategorieById(id: string): Observable<any> {\r\n    return this.http.get(`${this.baseUrl}/${id}`);\r\n  }\r\n\r\n  // Pour créer une catégorie\r\n  createCategorie(categorieData: FormData): Observable<any> {\r\n    return this.http.post(`${this.baseUrl}/create`, categorieData);\r\n  }\r\n\r\n  // Pour mettre à jour une catégorie\r\n  updateCategorie(id: string, categorieData: FormData): Observable<any> {\r\n    return this.http.put(`${this.baseUrl}/update/${id}`, categorieData);\r\n  }\r\n\r\n  // Pour supprimer une catégorie\r\n  deleteCategorie(id: string): Observable<any> {\r\n    return this.http.delete(`${this.baseUrl}/delete/${id}`);\r\n  }\r\n}\r\n"],"mappings":";;AAOA,OAAM,MAAOA,gBAAgB;EAG3BC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,OAAO,GAAG,sCAAsC,CAAC,CAAC;EAElB;EAExC;EACAC,gBAAgBA,CAAA;IACd,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAC,GAAG,IAAI,CAACF,OAAO,EAAE,CAAC;EACzC;EAEA;EACAG,gBAAgBA,CAACC,EAAU;IACzB,OAAO,IAAI,CAACL,IAAI,CAACG,GAAG,CAAC,GAAG,IAAI,CAACF,OAAO,IAAII,EAAE,EAAE,CAAC;EAC/C;EAEA;EACAC,eAAeA,CAACC,aAAuB;IACrC,OAAO,IAAI,CAACP,IAAI,CAACQ,IAAI,CAAC,GAAG,IAAI,CAACP,OAAO,SAAS,EAAEM,aAAa,CAAC;EAChE;EAEA;EACAE,eAAeA,CAACJ,EAAU,EAAEE,aAAuB;IACjD,OAAO,IAAI,CAACP,IAAI,CAACU,GAAG,CAAC,GAAG,IAAI,CAACT,OAAO,WAAWI,EAAE,EAAE,EAAEE,aAAa,CAAC;EACrE;EAEA;EACAI,eAAeA,CAACN,EAAU;IACxB,OAAO,IAAI,CAACL,IAAI,CAACY,MAAM,CAAC,GAAG,IAAI,CAACX,OAAO,WAAWI,EAAE,EAAE,CAAC;EACzD;EAAC,QAAAQ,CAAA,G;qBA5BUf,gBAAgB,EAAAgB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAhBpB,gBAAgB;IAAAqB,OAAA,EAAhBrB,gBAAgB,CAAAsB,IAAA;IAAAC,UAAA,EAFf;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}