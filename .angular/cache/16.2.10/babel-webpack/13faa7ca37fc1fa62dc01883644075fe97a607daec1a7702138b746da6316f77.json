{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../auth.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nexport class LoginComponent {\n  constructor(authService, router // Injection du Router\n  ) {\n    this.authService = authService;\n    this.router = router;\n    this.username = ''; // Ajoutez un type explicite et une valeur par défaut\n    this.password = ''; // Ajoutez un type explicite et une valeur par défaut\n  }\n\n  login() {\n    // Appel de la méthode de connexion de AuthService\n    // Utilisation de subscribe pour attendre la résolution de l'observable\n    this.authService.login(this.username, this.password).subscribe(loggedIn => {\n      if (loggedIn) {\n        // Redirection vers la page 'modules' si la connexion réussit\n        this.router.navigate(['/modules']);\n      } else {\n        // Gérer l'échec de la connexion ici (par exemple, afficher un message d'erreur)\n      }\n    });\n  }\n  static #_ = this.ɵfac = function LoginComponent_Factory(t) {\n    return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.AuthService), i0.ɵɵdirectiveInject(i2.Router));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LoginComponent,\n    selectors: [[\"app-login\"]],\n    decls: 11,\n    vars: 2,\n    consts: [[1, \"form-group\"], [\"for\", \"username\"], [\"type\", \"text\", \"id\", \"username\", \"name\", \"username\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"password\"], [\"type\", \"password\", \"id\", \"password\", \"name\", \"password\", 3, \"ngModel\", \"ngModelChange\"], [3, \"click\"]],\n    template: function LoginComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"label\", 1);\n        i0.ɵɵtext(2, \"Nom d'utilisateur\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"input\", 2);\n        i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_3_listener($event) {\n          return ctx.username = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(4, \"div\", 0)(5, \"label\", 3);\n        i0.ɵɵtext(6, \"Mot de passe\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"input\", 4);\n        i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_7_listener($event) {\n          return ctx.password = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(8, \"div\", 0)(9, \"button\", 5);\n        i0.ɵɵlistener(\"click\", function LoginComponent_Template_button_click_9_listener() {\n          return ctx.login();\n        });\n        i0.ɵɵtext(10, \"Se connecter\");\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngModel\", ctx.username);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.password);\n      }\n    },\n    dependencies: [i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgModel],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["LoginComponent","constructor","authService","router","username","password","login","subscribe","loggedIn","navigate","_","i0","ɵɵdirectiveInject","i1","AuthService","i2","Router","_2","selectors","decls","vars","consts","template","LoginComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","LoginComponent_Template_input_ngModelChange_3_listener","$event","LoginComponent_Template_input_ngModelChange_7_listener","LoginComponent_Template_button_click_9_listener","ɵɵadvance","ɵɵproperty"],"sources":["C:\\Users\\ASUS\\Desktop\\Nouveau dossier (2)\\frontpfe\\src\\app\\login\\login.component.ts","C:\\Users\\ASUS\\Desktop\\Nouveau dossier (2)\\frontpfe\\src\\app\\login\\login.component.html"],"sourcesContent":["import { Component } from '@angular/core';\r\nimport { Router } from '@angular/router'; // Import du Router\r\nimport { AuthService } from '../auth.service';\r\nimport { Compte } from '../model/compte';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent {\r\n  username: string = ''; // Ajoutez un type explicite et une valeur par défaut\r\n  password: string = ''; // Ajoutez un type explicite et une valeur par défaut\r\n\r\n  constructor(\r\n    private authService: AuthService,\r\n    private router: Router // Injection du Router\r\n  ) {}\r\n\r\n  login(): void {\r\n    // Appel de la méthode de connexion de AuthService\r\n    // Utilisation de subscribe pour attendre la résolution de l'observable\r\n    this.authService.login(this.username, this.password).subscribe((loggedIn) => {\r\n      if (loggedIn) {\r\n        // Redirection vers la page 'modules' si la connexion réussit\r\n        this.router.navigate(['/modules']);\r\n      } else {\r\n        // Gérer l'échec de la connexion ici (par exemple, afficher un message d'erreur)\r\n      }\r\n    });\r\n  }\r\n}\r\n","<div class=\"form-group\">\r\n  <label for=\"username\">Nom d'utilisateur</label>\r\n  <input type=\"text\" id=\"username\" name=\"username\" [(ngModel)]=\"username\">\r\n</div>\r\n<div class=\"form-group\">\r\n  <label for=\"password\">Mot de passe</label>\r\n  <input type=\"password\" id=\"password\" name=\"password\" [(ngModel)]=\"password\">\r\n</div>\r\n<div class=\"form-group\">\r\n  <button (click)=\"login()\">Se connecter</button>\r\n</div>\r\n"],"mappings":";;;;AAUA,OAAM,MAAOA,cAAc;EAIzBC,YACUC,WAAwB,EACxBC,MAAc,CAAC;EAAA,E;IADf,KAAAD,WAAW,GAAXA,WAAW;IACX,KAAAC,MAAM,GAANA,MAAM;IALhB,KAAAC,QAAQ,GAAW,EAAE,CAAC,CAAC;IACvB,KAAAC,QAAQ,GAAW,EAAE,CAAC,CAAC;EAKpB;;EAEHC,KAAKA,CAAA;IACH;IACA;IACA,IAAI,CAACJ,WAAW,CAACI,KAAK,CAAC,IAAI,CAACF,QAAQ,EAAE,IAAI,CAACC,QAAQ,CAAC,CAACE,SAAS,CAAEC,QAAQ,IAAI;MAC1E,IAAIA,QAAQ,EAAE;QACZ;QACA,IAAI,CAACL,MAAM,CAACM,QAAQ,CAAC,CAAC,UAAU,CAAC,CAAC;OACnC,MAAM;QACL;MAAA;IAEJ,CAAC,CAAC;EACJ;EAAC,QAAAC,CAAA,G;qBApBUV,cAAc,EAAAW,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,WAAA,GAAAH,EAAA,CAAAC,iBAAA,CAAAG,EAAA,CAAAC,MAAA;EAAA;EAAA,QAAAC,EAAA,G;UAAdjB,cAAc;IAAAkB,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,wBAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCV3Bb,EAAA,CAAAe,cAAA,aAAwB;QACAf,EAAA,CAAAgB,MAAA,wBAAiB;QAAAhB,EAAA,CAAAiB,YAAA,EAAQ;QAC/CjB,EAAA,CAAAe,cAAA,eAAwE;QAAvBf,EAAA,CAAAkB,UAAA,2BAAAC,uDAAAC,MAAA;UAAA,OAAAN,GAAA,CAAArB,QAAA,GAAA2B,MAAA;QAAA,EAAsB;QAAvEpB,EAAA,CAAAiB,YAAA,EAAwE;QAE1EjB,EAAA,CAAAe,cAAA,aAAwB;QACAf,EAAA,CAAAgB,MAAA,mBAAY;QAAAhB,EAAA,CAAAiB,YAAA,EAAQ;QAC1CjB,EAAA,CAAAe,cAAA,eAA4E;QAAvBf,EAAA,CAAAkB,UAAA,2BAAAG,uDAAAD,MAAA;UAAA,OAAAN,GAAA,CAAApB,QAAA,GAAA0B,MAAA;QAAA,EAAsB;QAA3EpB,EAAA,CAAAiB,YAAA,EAA4E;QAE9EjB,EAAA,CAAAe,cAAA,aAAwB;QACdf,EAAA,CAAAkB,UAAA,mBAAAI,gDAAA;UAAA,OAASR,GAAA,CAAAnB,KAAA,EAAO;QAAA,EAAC;QAACK,EAAA,CAAAgB,MAAA,oBAAY;QAAAhB,EAAA,CAAAiB,YAAA,EAAS;;;QAPEjB,EAAA,CAAAuB,SAAA,GAAsB;QAAtBvB,EAAA,CAAAwB,UAAA,YAAAV,GAAA,CAAArB,QAAA,CAAsB;QAIlBO,EAAA,CAAAuB,SAAA,GAAsB;QAAtBvB,EAAA,CAAAwB,UAAA,YAAAV,GAAA,CAAApB,QAAA,CAAsB"},"metadata":{},"sourceType":"module","externalDependencies":[]}