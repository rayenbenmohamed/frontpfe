{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class AuthService {\n  constructor(http) {\n    this.http = http;\n    this.token = '';\n    this.compte = null;\n    this.modules = []; // Ajoutez une variable pour stocker les informations sur les modules\n  }\n\n  login(username, password) {\n    return this.http.post('/api/login', {\n      nomUtilisateur: username,\n      motDePasse: password\n    });\n  }\n  setToken(token) {\n    this.token = token;\n  }\n  getToken() {\n    return this.token;\n  }\n  setCompte(compte) {\n    this.compte = compte;\n  }\n  getCompte() {\n    return this.compte;\n  }\n  setModules(modules) {\n    this.modules = modules;\n  }\n  getModules() {\n    return this.modules;\n  }\n  static #_ = this.ɵfac = function AuthService_Factory(t) {\n    return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthService,\n    factory: AuthService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["AuthService","constructor","http","token","compte","modules","login","username","password","post","nomUtilisateur","motDePasse","setToken","getToken","setCompte","getCompte","setModules","getModules","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\ASUS\\Desktop\\Nouveau dossier (2)\\frontpfe\\src\\app\\auth.service.ts"],"sourcesContent":["// auth.service.ts\r\n\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { Compte } from './model/compte';\r\nimport { Module } from './model/module'; // Import du modèle de module\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n  private token: string = '';\r\n  private compte: Compte | null = null;\r\n  private modules: Module[] = []; // Ajoutez une variable pour stocker les informations sur les modules\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  login(username: string, password: string): Observable<any> {\r\n    return this.http.post<any>('/api/login', { nomUtilisateur: username, motDePasse: password });\r\n  }\r\n\r\n  setToken(token: string): void {\r\n    this.token = token;\r\n  }\r\n\r\n  getToken(): string {\r\n    return this.token;\r\n  }\r\n\r\n  setCompte(compte: Compte): void {\r\n    this.compte = compte;\r\n  }\r\n\r\n  getCompte(): Compte | null {\r\n    return this.compte;\r\n  }\r\n\r\n  setModules(modules: Module[]): void {\r\n    this.modules = modules;\r\n  }\r\n\r\n  getModules(): Module[] {\r\n    return this.modules;\r\n  }\r\n}\r\n"],"mappings":";;AAWA,OAAM,MAAOA,WAAW;EAKtBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAJhB,KAAAC,KAAK,GAAW,EAAE;IAClB,KAAAC,MAAM,GAAkB,IAAI;IAC5B,KAAAC,OAAO,GAAa,EAAE,CAAC,CAAC;EAEO;;EAEvCC,KAAKA,CAACC,QAAgB,EAAEC,QAAgB;IACtC,OAAO,IAAI,CAACN,IAAI,CAACO,IAAI,CAAM,YAAY,EAAE;MAAEC,cAAc,EAAEH,QAAQ;MAAEI,UAAU,EAAEH;IAAQ,CAAE,CAAC;EAC9F;EAEAI,QAAQA,CAACT,KAAa;IACpB,IAAI,CAACA,KAAK,GAAGA,KAAK;EACpB;EAEAU,QAAQA,CAAA;IACN,OAAO,IAAI,CAACV,KAAK;EACnB;EAEAW,SAASA,CAACV,MAAc;IACtB,IAAI,CAACA,MAAM,GAAGA,MAAM;EACtB;EAEAW,SAASA,CAAA;IACP,OAAO,IAAI,CAACX,MAAM;EACpB;EAEAY,UAAUA,CAACX,OAAiB;IAC1B,IAAI,CAACA,OAAO,GAAGA,OAAO;EACxB;EAEAY,UAAUA,CAAA;IACR,OAAO,IAAI,CAACZ,OAAO;EACrB;EAAC,QAAAa,CAAA,G;qBAjCUlB,WAAW,EAAAmB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAXvB,WAAW;IAAAwB,OAAA,EAAXxB,WAAW,CAAAyB,IAAA;IAAAC,UAAA,EAFV;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}