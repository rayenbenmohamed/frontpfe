{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let CompteComponent = class CompteComponent {\n  constructor(authService) {\n    this.authService = authService;\n    this.compte = null;\n    this.modules = []; // Ajouter une propriété pour stocker les modules\n  }\n\n  ngOnInit() {\n    this.loadCompteInfo();\n    this.loadModules(); // Charger les modules lors de l'initialisation du composant\n  }\n\n  loadCompteInfo() {\n    this.compte = this.authService.getCompteInfo();\n  }\n  loadModules() {\n    this.modules = this.authService.getModules(); // Récupérer les modules depuis le service\n  }\n};\n\nCompteComponent = __decorate([Component({\n  selector: 'app-compte',\n  templateUrl: './compte.component.html',\n  styleUrls: ['./compte.component.css']\n})], CompteComponent);","map":{"version":3,"names":["Component","CompteComponent","constructor","authService","compte","modules","ngOnInit","loadCompteInfo","loadModules","getCompteInfo","getModules","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\ASUS\\Desktop\\Nouveau dossier (2)\\frontpfe\\src\\app\\compte\\compte.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from '../auth.service';\r\nimport { Compte } from '../model/compte';\r\nimport { Module } from '../model/module'; // Importer le modèle de module\r\n\r\n@Component({\r\n  selector: 'app-compte',\r\n  templateUrl: './compte.component.html',\r\n  styleUrls: ['./compte.component.css']\r\n})\r\nexport class CompteComponent implements OnInit {\r\n  compte: Compte | null = null;\r\n  modules: Module[] = []; // Ajouter une propriété pour stocker les modules\r\n\r\n  constructor(private authService: AuthService) {}\r\n\r\n  ngOnInit(): void {\r\n    this.loadCompteInfo();\r\n    this.loadModules(); // Charger les modules lors de l'initialisation du composant\r\n  }\r\n\r\n  loadCompteInfo(): void {\r\n    this.compte = this.authService.getCompteInfo();\r\n  }\r\n\r\n  loadModules(): void {\r\n    this.modules = this.authService.getModules(); // Récupérer les modules depuis le service\r\n  }\r\n}\r\n"],"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AAU1C,WAAMC,eAAe,GAArB,MAAMA,eAAe;EAI1BC,YAAoBC,WAAwB;IAAxB,KAAAA,WAAW,GAAXA,WAAW;IAH/B,KAAAC,MAAM,GAAkB,IAAI;IAC5B,KAAAC,OAAO,GAAa,EAAE,CAAC,CAAC;EAEuB;;EAE/CC,QAAQA,CAAA;IACN,IAAI,CAACC,cAAc,EAAE;IACrB,IAAI,CAACC,WAAW,EAAE,CAAC,CAAC;EACtB;;EAEAD,cAAcA,CAAA;IACZ,IAAI,CAACH,MAAM,GAAG,IAAI,CAACD,WAAW,CAACM,aAAa,EAAE;EAChD;EAEAD,WAAWA,CAAA;IACT,IAAI,CAACH,OAAO,GAAG,IAAI,CAACF,WAAW,CAACO,UAAU,EAAE,CAAC,CAAC;EAChD;CACD;;AAlBYT,eAAe,GAAAU,UAAA,EAL3BX,SAAS,CAAC;EACTY,QAAQ,EAAE,YAAY;EACtBC,WAAW,EAAE,yBAAyB;EACtCC,SAAS,EAAE,CAAC,wBAAwB;CACrC,CAAC,C,EACWb,eAAe,CAkB3B"},"metadata":{},"sourceType":"module","externalDependencies":[]}